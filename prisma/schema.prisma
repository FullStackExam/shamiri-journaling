// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id            String         @id @default(uuid())
  email         String         @unique
  passwordHash  String
  name          String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  preferences   Json?
  journalEntries JournalEntry[]
  categories    Category[]
}

model JournalEntry {
  id          String         @id @default(uuid())
  userId      String
  title       String
  content     String
  entryDate   DateTime
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  isDeleted   Boolean        @default(false)
  metadata    Json?
  user        User           @relation(fields: [userId], references: [id])
  entryCategories EntryCategory[]
}

model Category {
  id          String         @id @default(uuid())
  userId      String
  name        String
  color       String
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  user        User           @relation(fields: [userId], references: [id])
  entryCategories EntryCategory[]

  @@unique([userId, name])
}

model EntryCategory {
  id            String         @id @default(uuid())
  entryId       String
  categoryId    String
  createdAt     DateTime       @default(now())

  entry         JournalEntry  @relation(fields: [entryId], references: [id])
  category      Category      @relation(fields: [categoryId], references: [id])

  @@unique([entryId, categoryId])
}